name: Preproduction CI Smoke Tests

on:
  push:
    branches:
      - preproduction   # only run workflow on preproduction branch

jobs:
  preprod-tests:
    runs-on: ubuntu-latest

    env:
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}  # safe for staging

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Python (for pytest tests)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 3. Install pytest dependencies
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests requests-mock

      # 4. Build & start services
      - name: Start services with docker compose
        run: |
          NODE_ENV=test docker compose -f docker-compose.preprod.yml up -d --build
          sleep 15
          docker ps -a

      # 5. Backend health check
      - name: Backend health check
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:5000/health | grep -q "ok"; then
              echo "Backend healthy ✅"
              exit 0
            fi
            echo "Waiting for backend..."
            sleep 3
          done
          echo "Backend health check failed ❌"
          exit 1

      # 6. Run smoke tests
      - name: Run smoke tests
        run:  |
          export NODE_ENV=test
          pytest -v tests/
          
      # 7. Tear down
      - name: Shutdown services
        if: always()
        run: docker compose -f docker-compose.preprod.yml down
      

      # 8. Trigger deploy workflow if preprod passes
      - name: Trigger Deploy Workflow
        if: ${{ success() }}   # Only run if all previous steps succeeded
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: "deploy.yml"  # deploy workflow file
          ref: main               # deploy runs on main branch
          token: ${{ secrets.GH_PAT }}

       # === Step: Notify Discord with Embed ===
      - name: Notify Discord
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            COLOR=3066993  # green
            STATUS="✅ Deployment succeeded!"
          else
            COLOR=15158332 # red
            STATUS="❌ Deployment failed!"
          fi

          PAYLOAD=$(jq -n \
            --arg status "$STATUS" \
            --arg repo "${{ github.repository }}" \
            --arg branch "${{ github.ref_name }}" \
            --arg actor "${{ github.actor }}" \
            --arg run_id "${{ github.run_id }}" \
            --arg run_url "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            --argjson color "$COLOR" \
            '{
              "embeds": [{
                "title": $status,
                "color": $color,
                "fields": [
                  {"name": "Repository", "value": $repo, "inline": true},
                  {"name": "Branch", "value": $branch, "inline": true},
                  {"name": "Triggered by", "value": $actor, "inline": true},
                  {"name": "Workflow Run", "value": $run_url, "inline": false}
                ],
                "footer": {"text": "GitHub Actions • Deploy Workflow"}
              }]
            }'
          )

          curl -H "Content-Type: application/json" \
               -X POST \
               -d "$PAYLOAD" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

        