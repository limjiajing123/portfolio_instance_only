name: Preproduction CI Smoke Tests

on:
  push:
    branches:
      - preproduction   # only run workflow on preproduction branch

jobs:
  preprod-tests:
    runs-on: ubuntu-latest

    env:
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}  # safe for staging

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Python (for pytest tests)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 3. Install pytest dependencies
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests requests-mock

      # 4. Build & start services
      - name: Start services with docker compose
        run: |
          NODE_ENV=test docker compose -f docker-compose.preprod.yml up -d --build
          sleep 15
          docker ps -a

      # 5. Backend health check
      - name: Backend health check
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:5000/health | grep -q "ok"; then
              echo "Backend healthy ✅"
              exit 0
            fi
            echo "Waiting for backend..."
            sleep 3
          done
          echo "Backend health check failed ❌"
          exit 1

      # 6. Run smoke tests
      - name: Run smoke tests
        run:  |
          export NODE_ENV=test
          pytest -v tests/
          
      # 7. Tear down
      - name: Shutdown services
        if: always()
        run: docker compose -f docker-compose.preprod.yml down
      

      # 8. Trigger deploy workflow if preprod passes
      - name: Trigger Deploy Workflow
        if: ${{ success() }}   # Only run if all previous steps succeeded
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: "deploy.yml"  # deploy workflow file
          ref: main               # deploy runs on main branch
          token: ${{ secrets.GH_PAT }}

      - name: Notify Telegram (Success)
        if: success()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="✅ Preproduction CI Passed! Repo: ${{ github.repository }} | Branch: ${{ github.ref_name }} | Commit: ${{ github.sha }}"

      - name: Notify Telegram (Failure)
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="❌ Preproduction CI Failed! Repo: ${{ github.repository }} | Branch: ${{ github.ref_name }} | Commit: ${{ github.sha }}"

        
        