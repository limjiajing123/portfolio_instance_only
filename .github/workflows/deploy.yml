name: Build and Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Trigger deployment'
        required: true
        default: 'true'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main

      # AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      # Login to ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-southeast-1 \
            | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com

      # Build & push backend
      - name: Build and Push Backend Docker Image
        run: |
          docker build -t portfolio-backend ./backend
          docker tag portfolio-backend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com/instancebackend:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com/instancebackend:latest

      # Build & push frontend
      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t portfolio-frontend ./frontend
          docker tag portfolio-frontend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com/instancefrontend:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com/instancefrontend:latest

      # SSH Deploy
      - name: SSH Deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            chmod +x ~/deploy.sh
            ~/deploy.sh

      # Post-deployment health checks
      - name: Verify Frontend is live
        run: |
          for i in {1..15}; do
            if curl -s --fail https://limjiajing.com > /dev/null; then
              echo "Frontend is live! ✅"
              exit 0
            fi
            echo "Waiting for frontend..."
            sleep 5
          done
          echo "Frontend failed to come online! ❌"
          exit 1
          
      - name: Verify Backend is live
        run: |
          for i in {1..15}; do
            if curl -s --fail https://limjiajing.com/health > /dev/null; then
              echo "Backend is live! ✅"
              exit 0
            fi
            echo "Waiting for backend..."
            sleep 5
          done
          echo "Backend failed to come online! ❌"
          exit 1
